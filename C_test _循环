#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>

// 写三个数从大到小输出

//int main()
//{
//	int a, b, c;
//	printf("请输入三个数: "); // 475
//	scanf("%d%d%d", &a, &b, &c);
	// a 放最大值 , b 放中值 , c 放最小值
//
//	if (a < b)
//	{
//		int tem = a;
//		a = b;
//		b = tem;
//	}
//	if (b < c)
//	{
//		int tem = b;
//		b = c;
//		c = tem;
//	}
//	if( a < c)
//	{
//		int tem = a;
//		a = c;
//		c = tem;
//	}
//	printf("%d, %d, %d", a, b, c);
//	return 0;
//}

//打印 1-100 之间所有 3 的倍数

//	int main(){
//		int i;
//		for (int  i = 1; i < 100; i++)
//		{
//			if (i % 3 == 0)
//			{
//				printf("%d\n", i);
//			}
//			
//		}
//}

//最大公约数(辗转相除法)

//int main()
//{
//	int u,y,r;
//	printf("请输入两个数字: ");
//	scanf("%d %d",&u ,&y);
//
//	while(u % y)
//	{
//		r = u % y;
//		u = y;
//		y = r;
//	}
//
//
//	printf("%d", y );
//	return 0;
//}


//打印 1000 到 2000  之间的闰年

//int main()
//{
//	int count = 0;
//	for (int  i = 1000; i <= 2000; i++)
//	{
//		// 方式一
//		/*if (i % 4 == 0 && i % 100 !=0 )
//		{
//			printf("%d \n", i);
//			count++;
//		} else if (i % 400 ==0)
//		{
//			printf("%d \n", i);
//			count++;
//		}*/
//
//		// 方式二
//		if ((i % 4 ==0 & i % 100 !=0) || (i % 400 ==0))
//		{
//			printf("%d, ", i);
//			count++;
//		}
//	}
//	printf("\n	闰年有 %d 个", count);
//
//	return 0;
//}

// 求 100 -200 之间的素数
#include<math.h>
//int main()
//{
//	// 1.试除法
//	// sqrt() --开平方
//	int i = 0;
//	int count = 0;
//	for (/* i = 100; i <= 200; i++*/   i = 100; i <= 200; i+=1)
//	{
//		
//		int j = 0; 
//		for ( j = 2; j <=sqrt(i) ; j++)
//		{ 
//			if (i % j == 0)
//			{
//				break;
//
//			}
//		}
//
//		if (j >sqrt( i))
//		{
//			printf("%d, ", i);
//			count++;
//		}
//	}
//	printf("\n	一共有 %d 个素数 ", count);
//	
//
//
//	return 0;
//}
//

// <素数的 N 种解法>

// 1 - 100 中 所有 9 的个数

//int main()
//{
//	int i = 0;
//	int count = 0;
//	for ( i = 0; i <=100; i++)
//	{
//		if (i % 10 ==9)
//		{
//			printf("%d, ", i);
//					count++;
//		}
//		if (i / 10 == 9)
//		{
//			printf("%d, ", i);
//			count++;
//		}
//	
//	}
//	printf("\n数量为%d", count);
//	return 0;
//}

// 分数求和

//int main()
//{
//	int v = 1;
//	float sum = 0;
//	float i;
//	for ( i = 1; i <= 100; i++)
//	{
//		
//
//		sum = v*(1 / i) + sum;
//
//		v = (-1) * v;
//	}
//	printf("sum = %f", sum);
//	return 0;
//}

//求 10 个数的最大值

//int main()
//{
//	int arr[10] = { -1,-2,-3,-4,-5,-6,-7,-18,-9,-12 };
//
//	int max = arr[0]; // 设计一个最大值
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//
//	for ( i = 0; i <= sz; i++)
//	{
//		if (arr[i] > max) // 数组中的值与最大值相比较
//		{
//			max = arr[i]; //将较大的值存放在 max 中
//		}
//	}
//	printf("max = %d\n", max);
//	return 0;
//}

// 在屏幕上输出 9*9 乘法口诀表

//int main()
//{
//	for (int  i = 1; i <= 9; i++)
//	{
//		for (int j = 1; j <= i; j++)
//		{
//			printf("%d*%d=%2d	", i, j, i * j); // %2d 两位右对齐   %-2d 两位左对齐
//		}
//		printf("\n"); //每次循环后进行换行
//	}
//	return 0;
//}

// 二分查找

//int main()
//{
//	int a = 0;
//	int arr[] = { 1, 2, 4, 5, 6, 7, 8, 9, 21,10 };
//	
//
//	printf("请输入需要查询的数字: ");
//	scanf("%d", &a);
//
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int left = 0;
//	int right = sz -1;
//	
//
//	while (left <= right)
//	{
//		int mid = (left + right) / 2; //为什么不能放在循环外?
//		if (arr[mid] > a)
//		{
//			right = mid - 1;
//		} else if (arr[mid] < a)
//		{
//			left = mid + 1;
//		}
//		else 
//		{
//			printf("找到了, 下标为 %d", mid);
//			break;
//		}
//	}
//	if(left > right)
//	{
//		printf("找不到或输入错误");
//	}
//
//	return 0;
//}
